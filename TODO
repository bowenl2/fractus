
Todo
====
Client
------
Initialization Routine
	Register key
	Register locations
	Retrieve Contact Info
Contact Initialization
	Make connections to every contact
	
Find the work that can be done immediately at startup
>Public key directory
Establish incoming route
>Prompt for credentials
Proxy Support

Server
------
Database Interface:
		>GetAccountData
		>AddContact
		>RemoveContact
		>ListNonreciprocalContacts
		>GetUserContactData (with locations)
		>RegisterLocation
		>DeleteLocation
		>LocateUser
		>RegisterAccount
		>DeactivateAccount
Network:
	Create and agree upon protocol errors, then put them in.	
Tests:
	All database methods
		-- Register account
		-- Deactivate account
		-- 
Strategies:
	>AddContactReqStrategy
		-- Add notifier
	>CipherCapabilitiesStrategy
	ContactDataReqStrategy
	>HandshakeDataStrategy
	>IdentifyKeyReqStrategy
	PendingContactReqStrategy
	RegisterKeyReqStrategy
	RevokeKeyReqStrategy
	UnregisterLocationStrategy
	RegisterLocationStrategy
		
		
Update MessageDescriptor when needed
FractusConnector
FractusConnectorTest
Rename PublicKeyStrategy
Add code to FractusConnector for disconnecting with ProtocolError code
CipherCapabilitiesStrategy
CipherCapabilitiesStrategyTest
HandshakeStrategy
HandshakeStrategyTest


Web
---
-- Choose framework
Master page template
Install server (Tomcat?)
Create account
Delete account
Password reset mechanism
Download page
Link to documentation and Github
History of logins
Geo IP DB (later)
Statistics: Registered users, online locations







Done
----
-- Make ClientCipher test
-- Finish ClientCipher
-- Finish Nonce
-- Make Nonce test

* Implement CA in database
* Try to find old SQL script with stored procedures written

Cryptography plans
==================
TLS doesn't work because:
*	No implementation for TLS 1.2, which is required for AES-GCM (Suite B)
*	No implementation for web of trust without RFC 6091
*	Client / Server would go against own protocol

Nothing below this line makes sense
-----------------------------------
TLS Now -
--	Create self-signed X.509 certificate generator for FractusServer 
--	Create CA infrastructure in FractusServer 


TLS (future) -
--	during handshake, the client generates a random number and sends it to the server to establish
	a session key.  Why not use DH?  Just so that the secret changes between sessions, right?
--	How to disable renegotiation to stop August 2009 attack
--  Client/Server - how to work with just peers?  Can the originating peer just act as a client
	and the other peer as the server?
--  http://tools.ietf.org/html/rfc5246 <-- TLS
    http://tools.ietf.org/html/rfc6091 <-- using OpenPGP certificates
	  

GUI Plans
=========
Main Frame --
-- Contacts menu
---- Add, remove contact - Need to wire up
---- Sort contact by status, alphabetically -- make work
---- Show offline contacts? -- remember
-- Each contact has status icon, 

Conversation Frame --
-- All conversations in one window for now
-- One tab per conversation
-- Simple conversation at top, entry textbox at bottom with sash between

System Status Frame --
-- All connections' status in a scrollable table
---- Columns: IP address, local port, remote port, 
-- 

Log frame --
-- Be able to filter by log level severity
-- List each event in a sortable table
---- Columns: severity icon, event (with tooltip), originator class, date/time